[{"/home/station1776/test/epdemic/src/index.js":"1","/home/station1776/test/epdemic/src/reportWebVitals.js":"2","/home/station1776/test/epdemic/src/Containers/App.js":"3","/home/station1776/test/epdemic/src/app/store.js":"4","/home/station1776/test/epdemic/src/Containers/guide.js":"5","/home/station1776/test/epdemic/src/socket.js":"6","/home/station1776/test/epdemic/src/features/session/sessionSlices.js":"7","/home/station1776/test/epdemic/src/Containers/homepage.js":"8","/home/station1776/test/epdemic/src/Containers/signup.js":"9","/home/station1776/test/epdemic/src/Containers/forgetpw.js":"10","/home/station1776/test/epdemic/src/Containers/game.js":"11","/home/station1776/test/epdemic/src/Containers/loginpage.js":"12","/home/station1776/test/epdemic/src/Containers/rooms.js":"13","/home/station1776/test/epdemic/src/Containers/resetpw.js":"14","/home/station1776/test/epdemic/src/Containers/history.js":"15","/home/station1776/test/epdemic/src/Containers/room.js":"16","/home/station1776/test/epdemic/src/Containers/friends.js":"17","/home/station1776/test/epdemic/src/instance.js":"18","/home/station1776/test/epdemic/src/Containers/appbar.js":"19","/home/station1776/test/epdemic/src/Hooks/useGame.js":"20","/home/station1776/test/epdemic/src/Components/gameBoard.js":"21","/home/station1776/test/epdemic/src/constants/job.js":"22","/home/station1776/test/epdemic/src/Components/moveSelector.js":"23","/home/station1776/test/epdemic/src/constants/edgesDrawing.js":"24","/home/station1776/test/epdemic/src/constants/edges.js":"25","/home/station1776/test/epdemic/src/constants/cities.js":"26"},{"size":581,"mtime":1642187314220,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1642187314230,"results":"29","hashOfConfig":"28"},{"size":414,"mtime":1642187314180,"results":"30","hashOfConfig":"28"},{"size":198,"mtime":1642187314200,"results":"31","hashOfConfig":"28"},{"size":1279,"mtime":1642187314190,"results":"32","hashOfConfig":"28"},{"size":393,"mtime":1642187314230,"results":"33","hashOfConfig":"28"},{"size":797,"mtime":1642190180870,"results":"34","hashOfConfig":"28"},{"size":8132,"mtime":1642193803590,"results":"35","hashOfConfig":"28"},{"size":9089,"mtime":1642187314200,"results":"36","hashOfConfig":"28"},{"size":3925,"mtime":1642187314180,"results":"37","hashOfConfig":"28"},{"size":8584,"mtime":1642189732630,"results":"38","hashOfConfig":"28"},{"size":5737,"mtime":1642194490640,"results":"39","hashOfConfig":"28"},{"size":5118,"mtime":1642190064790,"results":"40","hashOfConfig":"28"},{"size":4669,"mtime":1642187314190,"results":"41","hashOfConfig":"28"},{"size":148,"mtime":1642187314190,"results":"42","hashOfConfig":"28"},{"size":4904,"mtime":1642189918660,"results":"43","hashOfConfig":"28"},{"size":4838,"mtime":1642198949580,"results":"44","hashOfConfig":"28"},{"size":183,"mtime":1642187314220,"results":"45","hashOfConfig":"28"},{"size":5696,"mtime":1642187314180,"results":"46","hashOfConfig":"28"},{"size":1186,"mtime":1642187314200,"results":"47","hashOfConfig":"28"},{"size":11925,"mtime":1642187314170,"results":"48","hashOfConfig":"28"},{"size":160,"mtime":1642187314210,"results":"49","hashOfConfig":"28"},{"size":3605,"mtime":1642187314180,"results":"50","hashOfConfig":"28"},{"size":892,"mtime":1642187314210,"results":"51","hashOfConfig":"28"},{"size":914,"mtime":1642187314210,"results":"52","hashOfConfig":"28"},{"size":4017,"mtime":1642187314210,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uofzka",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/station1776/test/epdemic/src/index.js",[],"/home/station1776/test/epdemic/src/reportWebVitals.js",[],"/home/station1776/test/epdemic/src/Containers/App.js",["121","122"],"import logo from \"../logo.svg\";\nimport \"../App.css\";\nimport webSocket from \"socket.io-client\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Guide from \"./guide\";\nimport { socket, SocketContext } from \"../socket\";\nfunction App() {\n  return (\n    <SocketContext.Provider value={socket}>\n      <Router>\n        <Guide />\n      </Router>\n    </SocketContext.Provider>\n  );\n}\n\nexport default App;\n","/home/station1776/test/epdemic/src/app/store.js",[],"/home/station1776/test/epdemic/src/Containers/guide.js",[],"/home/station1776/test/epdemic/src/socket.js",["123","124","125"],"import React from \"react\";\nimport io from \"socket.io-client\";\nimport dotenv from \"dotenv-defaults\";\nimport { useDispatch } from \"react-redux\";\nimport { Joingame } from \"./features/session/sessionSlices\";\n\nconst WEBSOCKET_URL = \"localhost:5000\";\n\ndotenv.config();\n\nfunction socketProvider() {}\n\nexport const socket = io(WEBSOCKET_URL);\nexport const SocketContext = React.createContext(socket);\n","/home/station1776/test/epdemic/src/features/session/sessionSlices.js",[],"/home/station1776/test/epdemic/src/Containers/homepage.js",["126","127","128","129","130","131","132","133","134"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\nimport instance from \"../instance\";\nimport ResponsiveAppBar from \"./appbar\";\nimport { Snackbar, Alert, Stack } from \"@mui/material\";\n\nconst theme = createTheme({\n  palette: {\n    quickStart: {\n      main: \"#ffc107\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n  lineHeight: \"15vh\",\n  padding: \"3.5vh\",\n  marginBottom: \"3vh\",\n}));\n\nfunction HomePage(props) {\n  const [open, setOpen] = useState(false);\n  const login = useSelector((state) => state.session.login);\n  const userId = useSelector((state) => state.session.userId);\n  const roomId = useSelector((state) => state.session.roomId);\n  const dispatch = useDispatch();\n  console.log(userId, roomId);\n  return (\n    <div>\n      <ResponsiveAppBar navigate={props.navigate} />\n\n      <Grid\n        container\n        spacing={2}\n        paddingLeft={\"2vw\"}\n        paddingRight={\"2vw\"}\n        mt={\"3vh\"}\n      >\n        <Grid item xs={5}>\n          <Card variant=\"outlined\">\n            <CardContent>\n              <Typography\n                sx={{\n                  fontSize: \"2.8vw\",\n                  mt: \"1vh\",\n                  mb: \"2.5vh\",\n                  textAlign: \"center\",\n                }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                規則摘要\n              </Typography>\n              <Typography\n                sx={{ fontSize: \"1.5vw\", mb: \"2.5vh\" }}\n                color=\"text.secondary\"\n              >\n                目標：研發四種解藥，讓世界不因為瘟疫而毀滅！\n              </Typography>\n              <Typography sx={{ fontSize: \"1vw\" }}>\n                在遊戲中，玩家化身為各個角色，利用自己有限的行動製作出4種不同瘟疫的解藥。\n              </Typography>\n              <Typography variant=\"body2\" sx={{ fontSize: \"1.2vw\" }}>\n                <br />\n                每人每回合有四個行動可選：\n                <br />\n                <Grid container spacing={0.5}>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body2\" sx={{ fontSize: \"1vw\" }}>\n                      1. 開車/乘船\n                      <br />\n                      3. 包機航班\n                      <br />\n                      5. 設立研究所\n                      <br />\n                      7. 交換情報\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body2\" sx={{ fontSize: \"1vw\" }}>\n                      2. 搭乘直航\n                      <br />\n                      4. 穿梭航班\n                      <br />\n                      6. 治療病患\n                      <br />\n                      8. 研發解藥\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <br />\n                遊戲中的角色包含：\n                <br />\n                <Grid container spacing={0.5}>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body2\" sx={{ fontSize: \"1vw\" }}>\n                      1. 調度員\n                      <br />\n                      3. 研究員\n                      <br />\n                      5. 防疫專家\n                      <br />\n                      7. 緊急應變專員\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body2\" sx={{ fontSize: \"1vw\" }}>\n                      2. 科學家\n                      <br />\n                      4. 醫護人員\n                      <br />\n                      6. 營運專家\n                      <br />\n                      8. 將軍\n                    </Typography>\n                  </Grid>\n                </Grid>\n                {/* {'\"a benevolent smile\"'} */}\n              </Typography>\n              <br />\n              <Typography\n                sx={{ fontSize: \"1.2vw\", mb: \"0.2vh\", mt: \"1.2vh\" }}\n                gutterBottom\n              >\n                詳細遊戲規則：\n              </Typography>\n              <Link href=\"https://boardgamearena.com/link?url=https%3A%2F%2Fgamesoncloud.blogspot.com%2F2014%2F08%2Fpandemic.html&id=12657\">\n                中文規則\n              </Link>\n              <br />\n              <Link href=\"https://boardgamearena.com/link?url=https%3A%2F%2Fwww.zmangames.com%2Fen%2Fproducts%2Fpandemic%2F&id=10284\">\n                English Rulebook\n              </Link>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={7}>\n          <Stack spacing={2}>\n            <Card>\n              <CardMedia\n                component=\"img\"\n                sx={{ maxWidth: \"57.5vw\", maxHeight: \"57.5vh\" }}\n                image=\"https://i.imgur.com/Q2UZka4.jpg\"\n                alt=\"pandemic board game\"\n              />\n            </Card>\n            {/* <div>\n              <img\n                src=\"https://i.imgur.com/Q2UZka4.jpg\"\n                max-width={\"10%\"}\n                height={\"auto\"}\n              ></img>\n            </div> */}\n            <Item elevation={3}>\n              <ThemeProvider theme={theme}>\n                <Button\n                  variant=\"contained\"\n                  // color=\"quickStart\"\n                  style={{ width: \"20vw\", height: \"15vh\", fontSize: \"2.5vw\" }}\n                  onClick={async () => {\n                    if (!login) {\n                      props.navigate(\"./login\");\n                    }\n                    try {\n                      await instance.post(\"/createRoom\", {\n                        userId: userId,\n                        difficulty: \"normal\",\n                      });\n                    } catch (e) {\n                      setOpen(true);\n                    }\n                  }}\n                >\n                  QuickStart\n                </Button>\n              </ThemeProvider>\n            </Item>\n          </Stack>\n        </Grid>\n      </Grid>\n\n      {/* <button\n        onClick={async () => {\n          const data = await instance.get(\"/session\");\n          console.log(data);\n        }}\n      >\n        get session\n      </button>\n      <button\n        onClick={() => {\n          instance.post(\"/login\", { userId: \"1\", password: \"1\" });\n        }}\n      >\n        send session\n      </button>\n      <button\n        onClick={() => {\n          instance.delete(\"/login\");\n        }}\n      >\n        delete session\n      </button>\n      {login ? <div>{userId}</div> : <div>Not login yet</div>}\n      <button onClick={() => props.navigate(\"/login\")}>go to login page</button>\n      <button onClick={() => props.navigate(\"/game\")}>go to game</button> */}\n      <Snackbar\n        anchorOrigin={{ vertical: \"button\", horizontal: \"left\" }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={() => setOpen(false)}\n      >\n        <Alert\n          onClose={() => setOpen(false)}\n          severity=\"error\"\n          sx={{ width: \"100%\" }}\n        >\n          Already in game\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\nexport default HomePage;\n","/home/station1776/test/epdemic/src/Containers/signup.js",["135","136","137"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport instance from \"../instance\";\nimport validator from \"email-validator\";\nimport { useRef, useState } from \"react\";\nimport bcrypt from \"bcryptjs\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Snackbar, Alert } from \"@mui/material\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp(props) {\n  const [open, setOpen] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [wrongEmail, setWrongEmail] = useState(false);\n  const [wrongUserId, setWrongUserId] = useState(false);\n  const [wrongPassword, setWrongPassword] = useState(false);\n  const [wrongRePassword, setWrongRePassword] = useState(false);\n  const [errorMessageEmail, setErrorMessageEmail] = useState(\"Invalid email\");\n  const [errorMessageUserId, setErrorMessageUserId] =\n    useState(\"ID already used\");\n  const [errorMessagePassword, setErrorMessagePassword] = useState(\n    \"Password not strong enough\"\n  );\n  const errorMessageRePassword = \"Not same with password\";\n  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\n  let idRef = useRef(null);\n  let emailRef = useRef(null);\n  let pwRef = useRef(null);\n  let repwRef = useRef(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setSubmit(true);\n    const form = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n\n    const email = form.get(\"email\");\n    const userId = form.get(\"userId\");\n    let password = form.get(\"password\");\n    const repassword = form.get(\"repassword\");\n\n    if (!validator.validate(email)) {\n      emailRef.current.value = \"\";\n      setWrongEmail(true);\n      setErrorMessageEmail(\"Invalid email\");\n      emailRef.current.focus();\n      setSubmit(false);\n      return;\n    }\n    if (!userId) {\n      setErrorMessageUserId(\"User ID is empty\");\n      setWrongEmail(false);\n      setWrongPassword(false);\n      setWrongRePassword(false);\n      setWrongUserId(true);\n      idRef.current.focus();\n      setSubmit(false);\n      return;\n    }\n    if (!password) {\n      setErrorMessagePassword(\"Password is empty\");\n      setWrongPassword(true);\n      setWrongEmail(false);\n      setWrongUserId(false);\n      setWrongRePassword(false);\n      pwRef.current.focus();\n      setSubmit(false);\n      return;\n    }\n    if (!regex.test(password)) {\n      pwRef.current.focus();\n      setSubmit(false);\n      return;\n    }\n    if (password != repassword) {\n      repwRef.current.value = \"\";\n      setWrongPassword(true);\n      setWrongEmail(false);\n      setWrongUserId(false);\n      setWrongRePassword(true);\n      repwRef.current.focus();\n      setSubmit(false);\n      return;\n    }\n    password = await bcrypt.hash(password, 10);\n    // console.log(password);\n    try {\n      const { data } = await instance.post(\"signup\", {\n        email,\n        userId,\n        password,\n      });\n      setSubmit(false);\n      setWrongEmail(false);\n      setWrongUserId(false);\n      setWrongRePassword(false);\n      setWrongPassword(false);\n      if (data.message === \"success\") {\n        console.log(\"varify your account with your email\");\n        setSuccess(true);\n        setOpen(true);\n      }\n    } catch (e) {\n      setOpen(true);\n      setSuccess(false);\n      setSubmit(false);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  inputRef={emailRef}\n                  error={wrongEmail}\n                  helperText={wrongEmail ? errorMessageEmail : null}\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  inputRef={idRef}\n                  error={wrongUserId}\n                  helperText={wrongUserId ? errorMessageUserId : null}\n                  id=\"userId\"\n                  label=\"User ID\"\n                  name=\"userId\"\n                  autoComplete=\"id\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  inputRef={pwRef}\n                  onChangeCapture={() => {\n                    if (!regex.test(pwRef.current.value)) {\n                      setWrongPassword(true);\n                    } else {\n                      setWrongPassword(false);\n                    }\n                  }}\n                  error={wrongPassword}\n                  helperText={wrongPassword ? errorMessagePassword : null}\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  inputRef={repwRef}\n                  error={wrongRePassword}\n                  helperText={wrongRePassword ? errorMessageRePassword : null}\n                  name=\"repassword\"\n                  label=\"confirm Password\"\n                  type=\"password\"\n                  id=\"repassword\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n            </Grid>\n            {submit ? (\n              <LoadingButton\n                loadingIndicator={\n                  <CircularProgress color=\"primary\" size={16} />\n                }\n                onClick={() => console.log(\"hi\")}\n                endIcon={<SendIcon />}\n                loading={true}\n                sx={{ mt: 3, mb: 2 }}\n                fullWidth\n                loadingPosition=\"end\"\n                variant=\"contained\"\n                color=\"error\"\n              >\n                Sign Up\n              </LoadingButton>\n            ) : (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign Up\n              </Button>\n            )}\n\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link variant=\"body2\" onClick={() => props.navigate(\"./login\")}>\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n        <Snackbar\n          anchorOrigin={{ vertical: \"button\", horizontal: \"left\" }}\n          open={open}\n          autoHideDuration={3000}\n          onClose={() => setOpen(false)}\n        >\n          {success ? (\n            <Alert\n              onClose={() => setOpen(false)}\n              severity=\"success\"\n              sx={{ width: \"100%\" }}\n            >\n              Receive the verify email\n            </Alert>\n          ) : (\n            <Alert\n              onClose={() => setOpen(false)}\n              severity=\"error\"\n              sx={{ width: \"100%\" }}\n            >\n              Sign up failed\n            </Alert>\n          )}\n        </Snackbar>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","/home/station1776/test/epdemic/src/Containers/forgetpw.js",["138"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport { LoadingButton } from \"@mui/lab\";\n\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport instance from \"../instance\";\nimport { useState } from \"react\";\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function ForgetPw(props) {\n  const [sent, setSent] = useState(false);\n  const [Message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: \"url(https://source.unsplash.com/random)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 18,\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              {sent ? <MailIcon /> : <QuestionMarkIcon />}\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Forget Password\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={async (event) => {\n                event.preventDefault();\n                const data = new FormData(event.currentTarget);\n                const email = data.get(\"email\");\n                setLoading(true);\n                instance\n                  .post(\"/forgetpw\", { email })\n                  .then((res) => {\n                    setSent(true);\n                    setMessage(\"Email sent\");\n                    setLoading(false);\n                  })\n                  .catch((err) => {\n                    setSent(true);\n                    setLoading(false);\n                    setMessage(\"Failed to Send email\");\n                  });\n              }}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n\n              <LoadingButton\n                loading={loading}\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {sent ? Message : \"Send email\"}\n              </LoadingButton>\n\n              <Copyright sx={{ mt: 5 }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","/home/station1776/test/epdemic/src/Containers/game.js",["139","140","141","142","143","144","145","146","147","148"],"import React, { useEffect } from \"react\";\nimport useGame from \"../Hooks/useGame\";\nimport Appbar from \"./appbar\";\nimport webSocket from \"socket.io-client\";\nimport { useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport instance from \"../instance\";\nimport { Login } from \"../features/session/sessionSlices\";\nimport MoveSelector from \"../Components/moveSelector\";\n// import { job } from \"../constants/job.js\";\nimport {\n  List,\n  ListSubheader,\n  ListItemButton,\n  Rating,\n  ListItemText,\n  Grid,\n  Card,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport io from \"socket.io-client\";\nimport GameBoard from \"../Components/gameBoard\";\n\nimport { jobs } from \"../constants/job\";\n\nconst WEBSOCKET_URL = \"https://socket-server-2.herokuapp.com/\";\n\n// console.log(job);\nfunction Game(props) {\n  const wsRef = useRef(null);\n  const roomId = useSelector((state) => state.session.roomId);\n  const userId = useSelector((state) => state.session.userId);\n  const [city, setCity] = useState(0);\n  const dispatch = useDispatch();\n  const {\n    who,\n    me,\n    leftMove,\n    virus,\n    players,\n    others,\n    pos,\n    setOthers,\n    setPlayers,\n    setWho,\n    setMe,\n    setLeftMove,\n    setPlayerDeck,\n    setDiscardPlayerDeck,\n    setVirusDeck,\n    setDiscardVirusDeck,\n    setVirus,\n  } = useGame();\n  useEffect(() => {\n    if (!userId) {\n      props.navigate(\"/login\");\n    }\n\n    wsRef.current = io(WEBSOCKET_URL);\n    // wsRef.current.on(\"room\", (data) => {\n    //   console.log(data.players);\n    //   setPlayers([...data.players]);\n    // });\n\n    wsRef.current.on(\"gameDetail\", (data) => {\n      setOthers(data.players.filter((player) => player.playerId !== userId));\n      setMe(data.players.filter((player) => player.playerId === userId));\n      setPlayers(data.players);\n      setVirus(data.virus);\n      setWho(data.who);\n      setPlayerDeck(data.playerDeck);\n      setDiscardPlayerDeck(data.discardplayerDeck);\n      setVirusDeck(data.virusDeck);\n      setDiscardVirusDeck(data.discardvirusDeck);\n    });\n    wsRef.current.on(\"drawPlayerDeck\", (data) => {\n      setPlayerDeck(data.playerDeck);\n      setDiscardPlayerDeck(data.discardplayerDeck);\n    });\n    wsRef.current.on(\"drawvirusDeck\", (data) => {\n      setVirusDeck(data.virusDeck);\n      setDiscardVirusDeck(data.discardvirusDeck);\n    });\n    wsRef.current.on(\"setVirus\", (data) => {\n      setVirus(data.virus);\n    });\n    wsRef.current.on(\"setWho\", (data) => {\n      setWho(data.who);\n    });\n    wsRef.current.on(\"setLeftMove\", (data) => {\n      setLeftMove(data.leftMove);\n    });\n    if (roomId) {\n      wsRef.current.emit(\"queryGame\", userId);\n    }\n\n    // console.log(others);\n    //dispatch(Addevent({ event: \"room\" }));\n    // console.log(others);\n    return () => wsRef.current.disconnect();\n  }, []);\n  // console.log(players);\n  // console.log(who);\n  return (\n    <div>\n      <Appbar navigate={props.navigate} />\n      {/* <button onClick={() => props.navigate(\"/\")}>back to homepage</button>\n      <button onClick={() => joinRoom(\"1\")}>click me to add room</button>\n      <button\n        onClick={() =>\n          startGame({\n            gameId: \"123\",\n            playersId: [\"1\", \"2\", \"3\", \"4\"],\n            playerNum: 4,\n            level: \"normal\",\n          })\n        }\n      >\n        get game data\n      </button> */}\n      <Grid container>\n        <Grid item xs={8.5}>\n          <GameBoard\n            players={players}\n            virus={virus}\n            who={who}\n            leftMove={leftMove}\n            setCity={setCity}\n          ></GameBoard>\n        </Grid>\n        <Grid item xs={3.5}>\n          <Grid container>\n            <Grid item xs={6.5}>\n              <MoveSelector\n                city={city}\n                pos={pos[who] ? pos[who] : 2}\n                hand={players[who] ? players[who].playerHand : []}\n              ></MoveSelector>\n              {/* 456 */}\n              {/* <Grid innerContainer>\n            <Grid item xs={8}>\n              <MoveSelector></MoveSelector>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <Typography\n                  sx={{ fontSize: 14 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  Player 1\n                </Typography>\n                <Typography\n                  sx={{ fontSize: 14 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  Job: Medic\n                </Typography>\n              </Card>\n            </Grid> */}\n              {/* </Grid> */}\n            </Grid>\n            <Grid item xs={4.5} mt={\"20px\"} mr={\"10px\"}>\n              <Card>\n                <Typography\n                  ml={\"10px\"}\n                  sx={{ fontSize: 26 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  {others[0] ? others[0].playerId : null}\n                </Typography>\n                <Typography\n                  ml={\"10px\"}\n                  sx={{ fontSize: 16 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  Job: {others[0] ? jobs[others[0].playerJob] : null}\n                </Typography>\n                <Button ml={\"10px\"}>ShowCard</Button>\n              </Card>\n              <br />\n              <Card>\n                <Typography\n                  ml={\"10px\"}\n                  sx={{ fontSize: 26 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  {others[1] ? others[1].playerId : null}\n                </Typography>\n                <Typography\n                  ml={\"10px\"}\n                  sx={{ fontSize: 16 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  Job: {others[1] ? jobs[others[1].playerJob] : null}\n                </Typography>\n                <Button ml={\"10px\"}>ShowCard</Button>\n              </Card>\n              <br />\n              <Card>\n                <Typography\n                  ml={\"10px\"}\n                  sx={{ fontSize: 26 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  {others[2] ? others[2].playerId : null}\n                </Typography>\n                <Typography\n                  ml={\"10px\"}\n                  sx={{ fontSize: 16 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  Job: {others[2] ? jobs[others[2].playerJob] : null}\n                </Typography>\n                <Button ml={\"10px\"}>ShowCard</Button>\n              </Card>\n            </Grid>\n          </Grid>\n          <br />\n          <Grid item xs={11}>\n            <Card>\n              <Typography\n                ml={\"10px\"}\n                sx={{ fontSize: 26 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                {userId}\n              </Typography>\n              <Typography\n                ml={\"10px\"}\n                sx={{ fontSize: 16 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Job: {me.length > 0 ? jobs[me[0].playerJob] : null}\n              </Typography>\n            </Card>\n          </Grid>\n          {/* <Card>\n            <Typography\n              ml={\"10px\"}\n              sx={{ fontSize: 26 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              Me\n            </Typography>\n            <Typography\n              ml={\"10px\"}\n              sx={{ fontSize: 16 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              Job: Builder\n            </Typography>\n          </Card> */}\n        </Grid>\n      </Grid>\n\n      {/* <List\n        sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n            Nested List Items\n          </ListSubheader>\n        }\n      >\n        {[...Array(48).keys()].map((x) => {\n          return (\n            <ListItemButton>\n              <ListItemText primary={x} />\n              <Rating\n                color=\"red\"\n                value={virus1[x] + virus2[x] + virus3[x] + virus4[x]}\n                readOnly\n              />\n            </ListItemButton>\n          );\n        })}\n      </List> */}\n    </div>\n  );\n}\nexport default Game;\n","/home/station1776/test/epdemic/src/Containers/loginpage.js",["149"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport instance from \"../instance\";\nimport { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Login } from \"../features/session/sessionSlices\";\nimport bcrypt from \"bcryptjs\";\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignInSide(props) {\n  const [wrong, setWrong] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let idRef = useRef(null);\n  let pwRef = useRef(null);\n  const dispatch = useDispatch();\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n    const userId = data.get(\"email\");\n    const password = data.get(\"password\");\n    try {\n      console.log(userId, password);\n      const user = await instance.post(\"/login\", { userId, password });\n      console.log(user);\n      dispatch(Login({ userId: user.data.userId, roomId: user.data.roomId }));\n      props.navigate(\"/\");\n    } catch (e) {\n      setWrong(true);\n      idRef.current.value = \"\";\n      pwRef.current.value = \"\";\n      idRef.current.focus();\n      setErrorMessage(\"Wrong Id or password\");\n    }\n\n    // (({ data: { userId, roomId } }) => {\n    //   dispatch(Login({ userId, roomId }));\n    //   console.log(data);\n    //   props.navigate(\"/\");\n    // })\n    // .catch((err) => {\n    //   setWrong(true);\n    //   idRef.current.value = \"\";\n    //   pwRef.current.value = \"\";\n    //   idRef.current.focus();\n    //   setErrorMessage(\"Wrong Id or password\");\n    // });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: \"url(https://source.unsplash.com/random)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                error={wrong}\n                inputRef={idRef}\n                helperText={errorMessage}\n                fullWidth\n                id=\"email\"\n                label=\"Email Address/User Id\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                inputRef={pwRef}\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link\n                    variant=\"body2\"\n                    onClick={() => props.navigate(\"./forgetpw\")}\n                  >\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link\n                    variant=\"body2\"\n                    onClick={() => props.navigate(\"./signup\")}\n                  >\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n              <Copyright sx={{ mt: 5 }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","/home/station1776/test/epdemic/src/Containers/rooms.js",["150","151","152","153","154","155","156","157"],"import React, { useEffect, useState, useRef } from \"react\";\nimport Appbar from \"./appbar\";\nimport instance from \"../instance\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { styled } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { Login, Joingame, Addevent } from \"../features/session/sessionSlices\";\nimport useGame from \"../Hooks/useGame\";\nimport { SocketContext } from \"../socket\";\nimport io from \"socket.io-client\";\n\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Stack,\n  Paper,\n  Grid,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\nconst WEBSOCKET_URL = \"localhost:5000\";\nexport default function Rooms(props) {\n  const [rooms, setRooms] = useState([]);\n  const userId = useSelector((state) => state.session.userId);\n  const roomId = useSelector((state) => state.session.roomId);\n  const socketEvent = useSelector((state) => state.session.socketEvent);\n  const [open, setOpen] = useState(false);\n  const wsRef = useRef(null);\n\n  const dispatch = useDispatch();\n  // const { connectWebSocket, joinRoom, ws } = useGame();\n  useEffect(() => {\n    if (!userId) {\n      props.navigate(\"/login\");\n    }\n    const fetch = async () => {\n      try {\n        const roomId = await instance.post(\"/room\", {\n          userId,\n        });\n        if (roomId.data.roomId.length > 0) {\n          props.navigate(`./room?roomId=${roomId.data.roomId}`);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n      const { data } = await instance.get(\"/rooms\");\n      setRooms(data);\n    };\n    wsRef.current = io(WEBSOCKET_URL);\n    wsRef.current.on(\"addRoom\", (data) => {\n      console.log(data);\n      //console.log(socketEvent);\n      instance.post(\"/joinRoom\", { gameId: data.gameId });\n      dispatch(Joingame({ roomId: data.gameId }));\n      props.navigate(`./room?roomId=${roomId}`);\n      //dispatch(Addevent({ event: \"addRoom\" }));\n    });\n\n    fetch();\n    return () => wsRef.current.disconnect();\n  }, []);\n  // if (roomId.length > 0) {\n  //   props.navigate(`./room?roomId=${roomId}`);\n  // }\n\n  return (\n    <>\n      <Appbar navigate={props.navigate} />\n      {/* <Box\n        sx={{\n          width: 300,\n          height: 400,\n          border: \"1px dashed grey\",\n          mx: 0,\n          padding: 0,\n        }}\n      >\n        hello\n      </Box>\n      <Box sx={{ width: 300, height: 400 }}>hello2</Box> */}\n      <Grid container spacing={2} sx={{ height: \"80vh\" }}>\n        <Grid item xs={3} mt={7} ml={3}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">難度</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              label=\"Difficulty\"\n            >\n              <MenuItem>Easy</MenuItem>\n              <MenuItem>Normal</MenuItem>\n              <MenuItem>Hard</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid ml={2} mt={5} xs={8} sx={{ height: \"100%\" }}>\n          <Stack mt={4} spacing={2} sx={{ height: \"100%\" }}>\n            {rooms.map((room) => (\n              <Card\n                sx={{ minWidth: 600, height: \"10%\", alignContent: \"cneter\" }}\n              >\n                <CardContent sx={{ alignItems: \"center\" }}>\n                  <Grid container spacing={1}>\n                    <Grid item xs={3}>\n                      <Item>{room.name}</Item>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Item>\n                        {\"Players：\"}\n                        {`${room.player} / ${room.capacity}`}\n                      </Item>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Item>\n                        {\"Difficulty：\"}\n                        {room.difficulty}\n                      </Item>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Button\n                        sx={{ float: \"right\" }}\n                        onClick={() => {\n                          wsRef.current.emit(\"joinRoom\", {\n                            userId,\n                            roomId: room.name,\n                          });\n                        }}\n                      >\n                        Join Room\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            ))}\n          </Stack>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: \"button\", horizontal: \"left\" }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={() => setOpen(false)}\n      >\n        <Alert\n          onClose={() => setOpen(false)}\n          severity=\"error\"\n          sx={{ width: \"100%\" }}\n        >\n          Join room failed\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n","/home/station1776/test/epdemic/src/Containers/resetpw.js",["158"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport { LoadingButton } from \"@mui/lab\";\nimport bcrypt from \"bcryptjs\";\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport instance from \"../instance\";\nimport { useState } from \"react\";\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function ResetPw(props) {\n  const [sent, setSent] = useState(false);\n  const [Message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: \"url(https://source.unsplash.com/random)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 18,\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              {sent ? <MailIcon /> : <QuestionMarkIcon />}\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Reset Password\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={async (event) => {\n                event.preventDefault();\n                const data = new FormData(event.currentTarget);\n                if (data.get(\"password\") !== data.get(\"password2\")) {\n                  setMessage(\"Password not same\");\n                  return;\n                }\n                let password = data.get(\"password\");\n                password = await bcrypt.hash(password, 10);\n                setLoading(true);\n                instance\n                  .post(\"/resetpw\", {\n                    password,\n                    secretToken: window.location.search,\n                  })\n                  .then((res) => {\n                    setSent(true);\n                    setMessage(\"Password Reset\");\n                    setLoading(false);\n                    props.navigate(\"./login\");\n                  })\n                  .catch((err) => {\n                    setSent(true);\n                    setLoading(false);\n                    setMessage(\"Failed to reset password\");\n                  });\n              }}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                type=\"password\"\n                fullWidth\n                id=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                autoComplete=\"password\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                type=\"password\"\n                id=\"password2\"\n                label=\"Confirm password\"\n                name=\"password2\"\n                autoComplete=\"password2\"\n              />\n\n              <LoadingButton\n                loading={loading}\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {sent ? Message : \"Reset\"}\n              </LoadingButton>\n\n              <Copyright sx={{ mt: 5 }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","/home/station1776/test/epdemic/src/Containers/history.js",["159"],"import react from \"react\";\nimport Appbar from \"./appbar\";\nexport default function History(props) {\n  return <Appbar navigate={props.navigate} />;\n}\n","/home/station1776/test/epdemic/src/Containers/room.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"import React, { useEffect, useState, useRef } from \"react\";\nimport Appbar from \"./appbar\";\nimport instance from \"../instance\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { styled } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { Login, Joingame, Addevent } from \"../features/session/sessionSlices\";\nimport useGame from \"../Hooks/useGame\";\nimport io from \"socket.io-client\";\nimport { Animation } from \"react-konva\";\nimport { socket, SocketContext } from \"../socket\";\nimport Konva from \"konva\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Stack,\n  Paper,\n  Grid,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\nconst WEBSOCKET_URL = \"localhost:5000\";\nexport default function Room(props) {\n  const [rooms, setRooms] = useState([]);\n  const userId = useSelector((state) => state.session.userId);\n  const roomId = useSelector((state) => state.session.roomId);\n  const login = useSelector((state) => state.session.login);\n  const socketEvent = useSelector((state) => state.session.socketEvent);\n  const [open, setOpen] = useState(false);\n  const [room, setRoom] = useState(null);\n  const [players, setPlayers] = useState([]);\n\n  const dispatch = useDispatch();\n  console.log(players);\n  const wsRef = useRef(null);\n  // const { connectWebSocket, joinRoom, ws } = useGame();\n  useEffect(() => {\n    if (!userId) {\n      props.navigate(\"./login\");\n    }\n    if (!roomId) {\n      props.navigate(\"./rooms\");\n    }\n    fetch().then(() => {\n      // console.log(user.data);\n      wsRef.current = io(WEBSOCKET_URL);\n\n      wsRef.current.on(\"room\", (data) => {\n        console.log(data.players);\n        setPlayers([...data.players]);\n      });\n      wsRef.current.on(\"gameStarted\", () => {\n        props.navigate(`./game?gameId=${roomId}`);\n      });\n      wsRef.current.emit(\"room\", roomId);\n    });\n\n    //dispatch(Addevent({ event: \"room\" }));\n\n    return () => wsRef.current.disconnect();\n  }, []);\n  //   useEffect(() => {\n  //     if (roomId.length > 0) {\n  //       console.log(\"hi\");\n  //     }\n  //   }, [login]);\n\n  // if (roomId.length > 0) {\n  //   props.navigate(`./room?roomId=${roomId}`);\n  // }\n\n  return (\n    <>\n      <Appbar navigate={props.navigate} />\n      {/* <button\n        onClick={() => {\n          ws.emit(\"room\", roomId);\n        }}\n      >\n        test\n      </button> */}\n      {/* <Box\n        sx={{\n          width: 300,\n          height: 400,\n          border: \"1px dashed grey\",\n          mx: 0,\n          padding: 0,\n        }}\n      >\n        hello\n      </Box>\n      <Box sx={{ width: 300, height: 400 }}>hello2</Box> */}\n      <Grid container spacing={2} sx={{ height: \"100vh\" }}>\n        <Grid item xs={3} mt={7} ml={3}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">難度</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              label=\"Difficulty\"\n            >\n              <MenuItem>Easy</MenuItem>\n              <MenuItem>Normal</MenuItem>\n              <MenuItem>Hard</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid ml={2} mt={5} xs={8} sx={{ height: \"100%\" }}>\n          <Stack mt={4} spacing={2} sx={{ height: \"100%\" }}>\n            {players.map((player) => (\n              //<button>{player.playerId}</button>\n              <Card\n                sx={{ minWidth: 600, height: \"10%\", alignContent: \"cneter\" }}\n              >\n                <CardContent sx={{ alignItems: \"center\" }}>\n                  <Grid container spacing={1}>\n                    <Grid item xs={3}>\n                      <Item>{player.playerId}</Item>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Item>{\"Players：\"}</Item>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Item>{\"Difficulty：\"}</Item>\n                    </Grid>\n                    <Grid item xs={3}></Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            ))}\n            <Button\n              variant=\"contained\"\n              // color=\"quickStart\"\n              style={{\n                width: \"20vw\",\n                height: \"15vh\",\n                fontSize: \"2.5vw\",\n              }}\n              onClick={async () => {\n                if (!login) {\n                  props.navigate(\"./login\");\n                }\n\n                wsRef.current.emit(\"startGame\", roomId);\n              }}\n            >\n              Start\n            </Button>\n          </Stack>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/home/station1776/test/epdemic/src/Containers/friends.js",["182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"import React, { useEffect, useState, useRef } from \"react\";\nimport Appbar from \"./appbar\";\nimport instance from \"../instance\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { styled } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { Login, Joingame, Addevent } from \"../features/session/sessionSlices\";\nimport useGame from \"../Hooks/useGame\";\n\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Stack,\n  Paper,\n  Grid,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Snackbar,\n  Alert,\n  InputBase,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\nconst WEBSOCKET_URL = \"localhost:5000\";\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Friends(props) {\n  const [friends, setFriends] = useState([]);\n  const [newFriend, setNewFriend] = useState(\"\");\n  const userId = useSelector((state) => state.session.userId);\n  const wsRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const dispatch = useDispatch();\n\n  //console.log(userId);\n\n  const onChange = (event) => {\n    console.log(event.target.value);\n    setNewFriend(event.target.value);\n  };\n\n  const handleAddFriend = async () => {\n    console.log(userId);\n    console.log(newFriend);\n    const buddy = await instance.post(\"/addFriend\", {\n      userId,\n      newFriend,\n    });\n    //inputRef.target.value = \"\";\n    console.log(buddy.data);\n    setFriends(buddy.data);\n    setNewFriend(\"\");\n  };\n\n  const handleDeleteFriend = async (name) => {\n    await instance.post(\"/deleteFriend\", {\n      userId,\n      name,\n    });\n    const buddy = await instance.post(\"/getFriend\", { userId });\n    console.log(buddy.data);\n    setFriends(buddy.data);\n  };\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (!userId) {\n        props.navigate(\"./login\");\n      }\n      // const user = await instance.get(\"/session\");\n      // if (user.data) {\n      //   //console.log(user.data);\n      //   dispatch(Login({ userId: user.data.userId, roomId: user.data.gameId }));\n      //   console.log(user.data);\n      // } else {\n      //   props.navigate(\"./login\");\n      // }\n\n      const buddy = await instance.post(\"/getFriend\", {\n        userId,\n      });\n      //console.log(buddy.data);\n      setFriends(buddy.data);\n    };\n\n    fetch();\n  }, []);\n\n  return (\n    <>\n      <Appbar navigate={props.navigate} />\n      <Grid container spacing={2} sx={{ height: \"80vh\" }}>\n        <Grid item xs={3} mt={7} ml={3}>\n          <Paper\n            component=\"form\"\n            sx={{\n              p: \"0.8vh 0.5vw\",\n              display: \"flex\",\n              alignItems: \"center\",\n              width: \"20vw\",\n            }}\n          >\n            <InputBase\n              sx={{ ml: 1, flex: 1 }}\n              placeholder=\"Search ID for Friends\"\n              onChange={onChange}\n              ref={inputRef}\n              inputProps={{ \"aria-label\": \"search for friends\" }}\n            />\n            <IconButton\n              type=\"submit\"\n              sx={{ p: \"10px\" }}\n              aria-label=\"search\"\n              onClick={handleAddFriend}\n            >\n              <AddIcon />\n            </IconButton>\n          </Paper>\n        </Grid>\n        <Grid ml={2} mt={5} xs={8} sx={{ height: \"100%\" }}>\n          {/* <Typography\n            sx={{\n              fontSize: \"2.8vw\",\n              mt: \"1vh\",\n              mb: \"2.5vh\",\n              textAlign: \"center\",\n            }}\n            color=\"text.secondary\"\n            gutterBottom\n          >\n            找朋友\n          </Typography> */}\n          <Stack mt={4} spacing={2} sx={{ height: \"100%\" }}>\n            {friends.map((friend) => (\n              <Card\n                sx={{ minWidth: 600, height: \"10%\", alignContent: \"center\" }}\n              >\n                <CardContent sx={{ alignItems: \"center\" }}>\n                  <Grid container spacing={1}>\n                    <Grid item xs={4}>\n                      <Item>{friend.name}</Item>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Item>{friend.status}</Item>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Button\n                        sx={{ float: \"right\" }}\n                        onClick={() => handleDeleteFriend(friend.name)}\n                      >\n                        Delete friend\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            ))}\n          </Stack>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/home/station1776/test/epdemic/src/instance.js",[],"/home/station1776/test/epdemic/src/Containers/appbar.js",[],"/home/station1776/test/epdemic/src/Hooks/useGame.js",["200","201","202","203","204","205","206","207","208","209"],"import { useEffect, useState } from \"react\";\nimport webSocket from \"socket.io-client\";\nconst WEBSOCKET_URL = \"http://localhost:5000\";\n\nconst useGame = () => {\n  const [gameId, setGameId] = useState(\"\");\n  const [playerDeck, setPlayerDeck] = useState([]);\n  const [discardplayerDeck, setDiscardPlayerDeck] = useState([]);\n  const [virusDeck, setVirusDeck] = useState([]);\n  const [discardvirusDeck, setDiscardVirusDeck] = useState([]);\n  const [activeVirus, setActiveVirus] = useState([]);\n  const [virus, setVirus] = useState(Array(48).fill(0));\n  const [players, setPlayers] = useState([]);\n  const [who, setWho] = useState(0);\n  const [leftMove, setLeftMove] = useState(4);\n  const [job, setJob] = useState(0);\n  const [others, setOthers] = useState([]);\n  const [me, setMe] = useState(\"\");\n  const [pos, setPos] = useState([2, 2, 2, 2]);\n  return {\n    players,\n    setPlayers,\n    setPlayerDeck,\n    setDiscardPlayerDeck,\n    setVirusDeck,\n    setDiscardVirusDeck,\n    setActiveVirus,\n    setVirus,\n    others,\n    setOthers,\n    who,\n    leftMove,\n    job,\n    setJob,\n    setLeftMove,\n    setWho,\n    virus,\n    me,\n    setMe,\n    pos,\n    setPos,\n  };\n};\nexport default useGame;\n","/home/station1776/test/epdemic/src/Components/gameBoard.js",["210","211","212","213","214","215","216"],"import React from \"react\";\nimport Konva from \"konva\";\nimport {\n  Layer,\n  Rect,\n  Stage,\n  Group,\n  Circle,\n  Image,\n  Text,\n  Line,\n  Star,\n} from \"react-konva\";\nimport { Button } from \"@mui/material\";\nimport { cities } from \"../constants/cities\";\nimport { edges } from \"../constants/edgesDrawing\";\n\nfunction GameBoard({ virus, players, setCity }) {\n  //console.log(cities);\n  let image = new window.Image();\n  image.src = \"https://i.imgur.com/v4mD7Mw.jpg\";\n  return (\n    <Stage width={window.innerWidth} height={620}>\n      {/* <Layer>\n        {/* <Button></Button> */}\n      {/* {players.length > 0 ? (\n          <>\n            <Rect x={1070} y={550} width={110} height={70} fill=\"red\"></Rect>\n            <Text x={1070} y={550} text={players[0].playerId}></Text>\n            <Rect x={1415} y={550} width={110} height={70} fill=\"red\"></Rect>\n            <Text x={1415} y={550} text={players[1].playerId}></Text>\n            <Rect x={1185} y={550} width={110} height={70} fill=\"red\"></Rect>\n            <Text x={1185} y={550} text={players[2].playerId}></Text>\n            <Rect x={1300} y={550} width={110} height={70} fill=\"red\"></Rect>\n            <Text x={1300} y={550} text={players[3].playerId}></Text>\n          </>\n        ) : null} \n      </Layer> */}\n      <Layer>\n        <Image\n          x={\"10\"}\n          y={\"10\"}\n          image={image}\n          width={1050}\n          height={620}\n        ></Image>\n      </Layer>\n      <Layer>\n        {edges.map((edge, i) => {\n          return edge.map((city) => {\n            // console.log(\n            //   cities[i].x,\n            //   cities[i].y,\n            //   cities[city].x,\n            //   cities[city].y\n            // );\n            return (\n              <Line\n                key={i + \"_\" + city}\n                points={[\n                  cities[i].x,\n                  cities[i].y,\n                  cities[city].x,\n                  cities[city].y,\n                ]}\n                stroke={\"lightgreen\"}\n                strokeWidth={3}\n              ></Line>\n            );\n          });\n        })}\n        <Line\n          points={[975, 525, 1060, 401.75]}\n          stroke={\"lightgreen\"}\n          strokeWidth={3}\n        ></Line>\n        <Line\n          points={[10, 401.75, 125, 235]}\n          stroke={\"lightgreen\"}\n          strokeWidth={3}\n        ></Line>\n        <Line\n          points={[945, 250, 1060, 216.78]}\n          stroke={\"lightgreen\"}\n          strokeWidth={3}\n        ></Line>\n        <Line\n          points={[10, 216.78, 110, 185]}\n          stroke={\"lightgreen\"}\n          strokeWidth={3}\n        ></Line>\n        <Line\n          points={[920, 390, 1060, 270.42]}\n          stroke={\"lightgreen\"}\n          strokeWidth={3}\n        ></Line>\n        <Line\n          points={[10, 270.42, 110, 185]}\n          stroke={\"lightgreen\"}\n          strokeWidth={3}\n        ></Line>\n      </Layer>\n      <Layer>\n        {cities.map((city, i) => (\n          <>\n            <Circle\n              key={city.city}\n              id={city.city}\n              x={city.x}\n              y={city.y}\n              radius={8}\n              fill={city.color}\n              onClick={() => {\n                alert(i);\n                setCity(i);\n              }}\n            ></Circle>\n            <Star\n              key={city.city + \"one\"}\n              id={city.city + \"\"}\n              x={city.x}\n              y={parseInt(city.y) + 15}\n              innerRadius={3}\n              outerRadius={6}\n              fill={virus[i] > 1 ? city.color : null}\n              stroke={city.color}\n              strokeWidth={1}\n              onClick={() => alert(city.city)}\n            ></Star>\n            <Star\n              key={city.city + \"two\"}\n              id={city.city + \"\"}\n              x={parseInt(city.x) - 10}\n              y={parseInt(city.y) + 15}\n              innerRadius={3}\n              outerRadius={6}\n              fill={virus[i] > 0 ? city.color : null}\n              stroke={city.color}\n              strokeWidth={1}\n              onClick={() => alert(city.city)}\n            ></Star>\n            <Star\n              key={city.city + \"three\"}\n              id={city.city + \"\"}\n              x={parseInt(city.x) + 10}\n              y={parseInt(city.y) + 15}\n              innerRadius={3}\n              outerRadius={6}\n              stroke={city.color}\n              strokeWidth={1}\n              fill={virus[i] > 2 ? city.color : null}\n              stroke={city.color}\n              strokeWidth={1}\n              onClick={() => alert(city.city)}\n            ></Star>\n          </>\n        ))}\n        {/* <Circle\n          x={\"110\"}\n          y={\"185\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"190\"}\n          y={\"210\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"200\"}\n          y={\"255\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"240\"}\n          y={\"185\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"270\"}\n          y={\"220\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"245\"}\n          y={\"250\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"495\"}\n          y={\"140\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"480\"}\n          y={\"225\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"520\"}\n          y={\"190\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"570\"}\n          y={\"165\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"560\"}\n          y={\"225\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"625\"}\n          y={\"130\"}\n          radius={8}\n          fill=\"blue\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"125\"}\n          y={\"235\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"170\"}\n          y={\"290\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"240\"}\n          y={\"300\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"260\"}\n          y={\"370\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"250\"}\n          y={\"440\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"250\"}\n          y={\"520\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"360\"}\n          y={\"480\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"300\"}\n          y={\"560\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"530\"}\n          y={\"360\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"610\"}\n          y={\"340\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"580\"}\n          y={\"410\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"580\"}\n          y={\"510\"}\n          radius={8}\n          fill=\"yellow\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"515\"}\n          y={\"285\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"655\"}\n          y={\"180\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"590\"}\n          y={\"285\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"615\"}\n          y={\"225\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"710\"}\n          y={\"190\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"670\"}\n          y={\"245\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"655\"}\n          y={\"300\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"715\"}\n          y={\"270\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"750\"}\n          y={\"235\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"750\"}\n          y={\"315\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"800\"}\n          y={\"280\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"790\"}\n          y={\"355\"}\n          radius={8}\n          fill=\"black\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"835\"}\n          y={\"320\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"795\"}\n          y={\"420\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"855\"}\n          y={\"200\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"865\"}\n          y={\"255\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"875\"}\n          y={\"295\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"920\"}\n          y={\"390\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"855\"}\n          y={\"400\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"900\"}\n          y={\"220\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"945\"}\n          y={\"250\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"970\"}\n          y={\"290\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"925\"}\n          y={\"305\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        />\n        <Circle\n          x={\"970\"}\n          y={\"525\"}\n          radius={8}\n          fill=\"red\"\n          onClick={() => alert(\"hello\")}\n        /> */}\n      </Layer>\n    </Stage>\n  );\n}\n\nexport default GameBoard;\n","/home/station1776/test/epdemic/src/constants/job.js",[],"/home/station1776/test/epdemic/src/Components/moveSelector.js",["217","218","219"],"import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport CommuteIcon from \"@mui/icons-material/Commute\";\nimport FlightLandIcon from \"@mui/icons-material/FlightLand\";\nimport FlightTakeoffIcon from \"@mui/icons-material/FlightTakeoff\";\nimport OtherHousesIcon from \"@mui/icons-material/OtherHouses\";\nimport MedicalServicesIcon from \"@mui/icons-material/MedicalServices\";\nimport SchoolIcon from \"@mui/icons-material/School\";\nimport ScienceIcon from \"@mui/icons-material/Science\";\nimport CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\nimport InboxIcon from \"@mui/icons-material/Inbox\";\nimport DraftsIcon from \"@mui/icons-material/Drafts\";\nimport { edges } from \"../constants/edges\";\nimport { cities } from \"../constants/cities\";\n\nexport default function MoveSelector({ city, pos, hand }) {\n  // console.log(pos);\n  // console.log(\"city\", city);\n  // console.log(hand);\n  // console.log(hand);\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        maxWidth: 250,\n        bgcolor: \"background.paper\",\n        mt: \"10px\",\n      }}\n    >\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton disabled={!edges[pos].includes(city)}>\n            <ListItemIcon>\n              <CommuteIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Drive/Ferry：\" + cities[city].name} />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton disabled={!hand.includes(city)}>\n            <ListItemIcon>\n              <FlightLandIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Direct Flight：\" + cities[city].name} />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon diabled={!hand.includes(city)}>\n              <FlightTakeoffIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Charter Flight：\" + cities[city].name} />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <CompareArrowsIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Shuttle Flight：\" + cities[city].name} />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <OtherHousesIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Build Lab\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <MedicalServicesIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Treat Disease\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <SchoolIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Share Card\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <ScienceIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Discover Cure\" />\n          </ListItemButton>\n        </ListItem>\n      </List>\n    </Box>\n  );\n}\n","/home/station1776/test/epdemic/src/constants/edgesDrawing.js",[],"/home/station1776/test/epdemic/src/constants/edges.js",[],"/home/station1776/test/epdemic/src/constants/cities.js",[],{"ruleId":"220","severity":1,"message":"221","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":12},{"ruleId":"220","severity":1,"message":"224","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":17},{"ruleId":"220","severity":1,"message":"225","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":21},{"ruleId":"220","severity":1,"message":"226","line":5,"column":10,"nodeType":"222","messageId":"223","endLine":5,"endColumn":18},{"ruleId":"220","severity":1,"message":"227","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":24},{"ruleId":"220","severity":1,"message":"228","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"229","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"230","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":19},{"ruleId":"220","severity":1,"message":"231","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":17},{"ruleId":"220","severity":1,"message":"232","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":24},{"ruleId":"220","severity":1,"message":"233","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":16},{"ruleId":"220","severity":1,"message":"234","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":11},{"ruleId":"220","severity":1,"message":"235","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":24},{"ruleId":"220","severity":1,"message":"236","line":46,"column":9,"nodeType":"222","messageId":"223","endLine":46,"endColumn":17},{"ruleId":"220","severity":1,"message":"232","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":24},{"ruleId":"220","severity":1,"message":"233","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":110,"column":18,"nodeType":"239","messageId":"240","endLine":110,"endColumn":20},{"ruleId":"220","severity":1,"message":"241","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"224","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":17},{"ruleId":"220","severity":1,"message":"242","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"243","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":15},{"ruleId":"220","severity":1,"message":"244","line":12,"column":3,"nodeType":"222","messageId":"223","endLine":12,"endColumn":7},{"ruleId":"220","severity":1,"message":"245","line":13,"column":3,"nodeType":"222","messageId":"223","endLine":13,"endColumn":16},{"ruleId":"220","severity":1,"message":"246","line":14,"column":3,"nodeType":"222","messageId":"223","endLine":14,"endColumn":17},{"ruleId":"220","severity":1,"message":"247","line":15,"column":3,"nodeType":"222","messageId":"223","endLine":15,"endColumn":9},{"ruleId":"220","severity":1,"message":"248","line":16,"column":3,"nodeType":"222","messageId":"223","endLine":16,"endColumn":15},{"ruleId":"220","severity":1,"message":"236","line":35,"column":9,"nodeType":"222","messageId":"223","endLine":35,"endColumn":17},{"ruleId":"249","severity":1,"message":"250","line":102,"column":6,"nodeType":"251","endLine":102,"endColumn":8,"suggestions":"252"},{"ruleId":"220","severity":1,"message":"253","line":19,"column":8,"nodeType":"222","messageId":"223","endLine":19,"endColumn":14},{"ruleId":"220","severity":1,"message":"254","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":18},{"ruleId":"220","severity":1,"message":"243","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":15},{"ruleId":"220","severity":1,"message":"255","line":7,"column":27,"nodeType":"222","messageId":"223","endLine":7,"endColumn":35},{"ruleId":"220","severity":1,"message":"256","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":15},{"ruleId":"220","severity":1,"message":"257","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":23},{"ruleId":"220","severity":1,"message":"258","line":14,"column":3,"nodeType":"222","messageId":"223","endLine":14,"endColumn":14},{"ruleId":"220","severity":1,"message":"259","line":39,"column":9,"nodeType":"222","messageId":"223","endLine":39,"endColumn":20},{"ruleId":"249","severity":1,"message":"260","line":75,"column":6,"nodeType":"251","endLine":75,"endColumn":8,"suggestions":"261"},{"ruleId":"220","severity":1,"message":"241","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"262","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":13},{"ruleId":"220","severity":1,"message":"242","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":16},{"ruleId":"220","severity":1,"message":"254","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":18},{"ruleId":"220","severity":1,"message":"243","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":15},{"ruleId":"220","severity":1,"message":"226","line":7,"column":17,"nodeType":"222","messageId":"223","endLine":7,"endColumn":25},{"ruleId":"220","severity":1,"message":"255","line":7,"column":27,"nodeType":"222","messageId":"223","endLine":7,"endColumn":35},{"ruleId":"220","severity":1,"message":"256","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":15},{"ruleId":"220","severity":1,"message":"263","line":10,"column":10,"nodeType":"222","messageId":"223","endLine":10,"endColumn":19},{"ruleId":"220","severity":1,"message":"264","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":16},{"ruleId":"220","severity":1,"message":"257","line":11,"column":18,"nodeType":"222","messageId":"223","endLine":11,"endColumn":31},{"ruleId":"220","severity":1,"message":"265","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":13},{"ruleId":"220","severity":1,"message":"258","line":15,"column":3,"nodeType":"222","messageId":"223","endLine":15,"endColumn":14},{"ruleId":"220","severity":1,"message":"266","line":25,"column":3,"nodeType":"222","messageId":"223","endLine":25,"endColumn":11},{"ruleId":"220","severity":1,"message":"267","line":26,"column":3,"nodeType":"222","messageId":"223","endLine":26,"endColumn":8},{"ruleId":"220","severity":1,"message":"268","line":37,"column":10,"nodeType":"222","messageId":"223","endLine":37,"endColumn":15},{"ruleId":"220","severity":1,"message":"269","line":37,"column":17,"nodeType":"222","messageId":"223","endLine":37,"endColumn":25},{"ruleId":"220","severity":1,"message":"259","line":41,"column":9,"nodeType":"222","messageId":"223","endLine":41,"endColumn":20},{"ruleId":"220","severity":1,"message":"270","line":42,"column":10,"nodeType":"222","messageId":"223","endLine":42,"endColumn":14},{"ruleId":"220","severity":1,"message":"271","line":42,"column":16,"nodeType":"222","messageId":"223","endLine":42,"endColumn":23},{"ruleId":"220","severity":1,"message":"272","line":43,"column":10,"nodeType":"222","messageId":"223","endLine":43,"endColumn":14},{"ruleId":"220","severity":1,"message":"273","line":43,"column":16,"nodeType":"222","messageId":"223","endLine":43,"endColumn":23},{"ruleId":"220","severity":1,"message":"236","line":46,"column":9,"nodeType":"222","messageId":"223","endLine":46,"endColumn":17},{"ruleId":"249","severity":1,"message":"274","line":74,"column":6,"nodeType":"251","endLine":74,"endColumn":8,"suggestions":"275"},{"ruleId":"220","severity":1,"message":"254","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":18},{"ruleId":"220","severity":1,"message":"276","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":18},{"ruleId":"220","severity":1,"message":"243","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":15},{"ruleId":"220","severity":1,"message":"226","line":9,"column":17,"nodeType":"222","messageId":"223","endLine":9,"endColumn":25},{"ruleId":"220","severity":1,"message":"255","line":9,"column":27,"nodeType":"222","messageId":"223","endLine":9,"endColumn":35},{"ruleId":"220","severity":1,"message":"256","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":15},{"ruleId":"220","severity":1,"message":"258","line":14,"column":3,"nodeType":"222","messageId":"223","endLine":14,"endColumn":14},{"ruleId":"220","severity":1,"message":"277","line":20,"column":3,"nodeType":"222","messageId":"223","endLine":20,"endColumn":9},{"ruleId":"220","severity":1,"message":"278","line":21,"column":3,"nodeType":"222","messageId":"223","endLine":21,"endColumn":14},{"ruleId":"220","severity":1,"message":"279","line":22,"column":3,"nodeType":"222","messageId":"223","endLine":22,"endColumn":13},{"ruleId":"220","severity":1,"message":"280","line":23,"column":3,"nodeType":"222","messageId":"223","endLine":23,"endColumn":11},{"ruleId":"220","severity":1,"message":"266","line":24,"column":3,"nodeType":"222","messageId":"223","endLine":24,"endColumn":11},{"ruleId":"220","severity":1,"message":"267","line":25,"column":3,"nodeType":"222","messageId":"223","endLine":25,"endColumn":8},{"ruleId":"220","severity":1,"message":"281","line":28,"column":3,"nodeType":"222","messageId":"223","endLine":28,"endColumn":13},{"ruleId":"220","severity":1,"message":"282","line":32,"column":7,"nodeType":"222","messageId":"223","endLine":32,"endColumn":20},{"ruleId":"220","severity":1,"message":"283","line":44,"column":9,"nodeType":"222","messageId":"223","endLine":44,"endColumn":14},{"ruleId":"220","severity":1,"message":"236","line":47,"column":9,"nodeType":"222","messageId":"223","endLine":47,"endColumn":17},{"ruleId":"249","severity":1,"message":"284","line":101,"column":6,"nodeType":"251","endLine":101,"endColumn":8,"suggestions":"285"},{"ruleId":"220","severity":1,"message":"228","line":1,"column":10,"nodeType":"222","messageId":"223","endLine":1,"endColumn":19},{"ruleId":"220","severity":1,"message":"224","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":17},{"ruleId":"220","severity":1,"message":"282","line":3,"column":7,"nodeType":"222","messageId":"223","endLine":3,"endColumn":20},{"ruleId":"220","severity":1,"message":"286","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":16},{"ruleId":"220","severity":1,"message":"287","line":6,"column":18,"nodeType":"222","messageId":"223","endLine":6,"endColumn":27},{"ruleId":"220","severity":1,"message":"288","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":20},{"ruleId":"220","severity":1,"message":"289","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":27},{"ruleId":"220","severity":1,"message":"290","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":19},{"ruleId":"220","severity":1,"message":"291","line":10,"column":10,"nodeType":"222","messageId":"223","endLine":10,"endColumn":26},{"ruleId":"220","severity":1,"message":"292","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":21},{"ruleId":"220","severity":1,"message":"265","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":13},{"ruleId":"220","severity":1,"message":"293","line":5,"column":3,"nodeType":"222","messageId":"223","endLine":5,"endColumn":7},{"ruleId":"220","severity":1,"message":"294","line":7,"column":3,"nodeType":"222","messageId":"223","endLine":7,"endColumn":8},{"ruleId":"220","severity":1,"message":"295","line":10,"column":3,"nodeType":"222","messageId":"223","endLine":10,"endColumn":7},{"ruleId":"220","severity":1,"message":"241","line":14,"column":10,"nodeType":"222","messageId":"223","endLine":14,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":152,"column":15,"nodeType":"298","messageId":"299","endLine":152,"endColumn":34},{"ruleId":"296","severity":1,"message":"297","line":153,"column":15,"nodeType":"298","messageId":"299","endLine":153,"endColumn":30},{"ruleId":"220","severity":1,"message":"300","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":15},{"ruleId":"220","severity":1,"message":"301","line":17,"column":8,"nodeType":"222","messageId":"223","endLine":17,"endColumn":17},{"ruleId":"220","severity":1,"message":"302","line":18,"column":8,"nodeType":"222","messageId":"223","endLine":18,"endColumn":18},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'webSocket' is defined but never used.","'useDispatch' is defined but never used.","'Joingame' is defined but never used.","'socketProvider' is defined but never used.","'useEffect' is defined but never used.","'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'instance' is defined but never used.","'Login' is defined but never used.","'List' is defined but never used.","'ListSubheader' is defined but never used.","'ListItemButton' is defined but never used.","'Rating' is defined but never used.","'ListItemText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props', 'roomId', 'setDiscardPlayerDeck', 'setDiscardVirusDeck', 'setLeftMove', 'setMe', 'setOthers', 'setPlayerDeck', 'setPlayers', 'setVirus', 'setVirusDeck', 'setWho', and 'userId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["303"],"'bcrypt' is defined but never used.","'PersonIcon' is defined but never used.","'Addevent' is defined but never used.","'useGame' is defined but never used.","'SocketContext' is defined but never used.","'CardActions' is defined but never used.","'socketEvent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props', 'roomId', and 'userId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["304"],"'react' is defined but never used.","'Animation' is defined but never used.","'socket' is defined but never used.","'Konva' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'rooms' is assigned a value but never used.","'setRooms' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props', 'roomId', and 'userId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["305"],"'SearchIcon' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Typography' is defined but never used.","'WEBSOCKET_URL' is assigned a value but never used.","'wsRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'userId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["306"],"'gameId' is assigned a value but never used.","'setGameId' is assigned a value but never used.","'playerDeck' is assigned a value but never used.","'discardplayerDeck' is assigned a value but never used.","'virusDeck' is assigned a value but never used.","'discardvirusDeck' is assigned a value but never used.","'activeVirus' is assigned a value but never used.","'Rect' is defined but never used.","'Group' is defined but never used.","'Text' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Divider' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.",{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [props, roomId, setDiscardPlayerDeck, setDiscardVirusDeck, setLeftMove, setMe, setOthers, setPlayerDeck, setPlayers, setVirus, setVirusDeck, setWho, userId]",{"range":"315","text":"316"},"Update the dependencies array to be: [dispatch, props, roomId, userId]",{"range":"317","text":"318"},"Update the dependencies array to be: [props, roomId, userId]",{"range":"319","text":"320"},"Update the dependencies array to be: [props, userId]",{"range":"321","text":"322"},[2810,2812],"[props, roomId, setDiscardPlayerDeck, setDiscardVirusDeck, setLeftMove, setMe, setOthers, setPlayerDeck, setPlayers, setVirus, setVirusDeck, setWho, userId]",[2229,2231],"[dispatch, props, roomId, userId]",[2211,2213],"[props, roomId, userId]",[2551,2553],"[props, userId]"]